{"version":3,"file":"index.modern.mjs","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport type { CSSProperties, MouseEventHandler, ReactNode } from 'react';\n\nexport interface TiltChangeDetails {\n  /** @example `\"-4.90\"` */\n  tiltX: string;\n  /** @example `\"3.03\"` */\n  tiltY: string;\n  /** @example `64` */\n  percentageX: number;\n  /** @example `58.62` */\n  percentageY: number;\n  /** @example `121.751281` */\n  angle: number;\n}\n\nexport interface TiltChangeEvent {\n  detail: TiltChangeDetails;\n}\n\nexport type TiltChangeEventHandler = (event: TiltChangeEvent) => void;\n\nexport interface Coordinates {\n  clientX: number;\n  clientY: number;\n}\n\nexport interface TiltyProps {\n  /**\n   * A class name to be applied to the component's wrapper div.\n   */\n  className?: string;\n\n  /**\n   * React styles to be applied to the component's wrapper div.\n   */\n  style?: CSSProperties;\n\n  /**\n   * Whether or not to invert the tilt direction.\n   *\n   * @defaultValue `false`\n   */\n  reverse?: boolean;\n\n  /**\n   * The maximum tilt angle in degrees.\n   *\n   * Must be between `0` and `180`.\n   *\n   * @defaultValue `35`\n   */\n  max?: number;\n\n  /**\n   * The perspective of the tilt transform. Lower values mean the tilt effect\n   * is more extreme.\n   *\n   * @defaultValue `1000`\n   */\n  perspective?: number;\n\n  /**\n   * The CSS easing function to use when the mouse enters or leaves the tilt\n   * container.\n   *\n   * @defaultValue `'cubic-bezier(0.03,0.98,0.52,0.99)'`\n   */\n  easing?: string;\n\n  /**\n   * The time in milliseconds the enter/exit transitions will take.\n   *\n   * @defaultValue `300`\n   */\n  speed?: number;\n\n  /**\n   * The amount to scale the tilt container while hovered, relative to its\n   * normal size.\n   *\n   * `1` = 100%, `0.5` = 50%, etc.\n   *\n   * @defaultValue `1`\n   */\n  scale?: number;\n\n  /**\n   * Which axis to disable tilting on, if any.\n   */\n  axis?: 'X' | 'Y';\n\n  /**\n   * Whether or not to reset the tilt effect when the mouse leaves the tilt\n   * container.\n   *\n   * @defaultValue `true`\n   */\n  reset?: boolean;\n\n  /**\n   * Whether or not to add a light glare effect to the tilt container.\n   *\n   * @defaultValue `false`\n   */\n  glare?: boolean;\n\n  /**\n   * The maximum opacity of the glare effect.\n   *\n   * Must be between `0` and `1`.\n   *\n   * @defaultValue `1`\n   */\n  maxGlare?: number;\n\n  /**\n   * React styles to be applied to the glare effect component.\n   */\n  glareStyle?: CSSProperties;\n\n  /**\n   * Whether or not to enable device orientation (gyroscope) support. This only\n   * works on devices that support the DeviceOrientationEvent API (e.g. mobile\n   * devices).\n   *\n   * @defaultValue `true`\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent}\n   */\n  gyroscope?: boolean;\n\n  /**\n   * This is the bottom limit of the device angle on X axis, meaning that a\n   * device rotated at this angle would tilt the element as if the mouse was on\n   * the left border of the element.\n   *\n   * Must be between `-180` and `0`.\n   *\n   * @defaultValue `-45`\n   */\n  gyroscopeMinAngleX?: number;\n\n  /**\n   * This is the top limit of the device angle on X axis, meaning that a device\n   * rotated at this angle would tilt the element as if the mouse was on the\n   * right border of the element.\n   *\n   * Must be between `0` and `180`.\n   *\n   * @defaultValue `45`\n   */\n  gyroscopeMaxAngleX?: number;\n\n  /**\n   * This is the bottom limit of the device angle on Y axis, meaning that a\n   * device rotated at this angle would tilt the element as if the mouse was on\n   * the top border of the element.\n   *\n   * Must be between `-180` and `0`.\n   *\n   * @defaultValue `-45`\n   */\n  gyroscopeMinAngleY?: number;\n\n  /**\n   * his is the top limit of the device angle on Y axis, meaning that a device\n   * rotated at this angle would tilt the element as if the mouse was on the\n   * bottom border of the element.\n   *\n   * Must be between `0` and `180`.\n   *\n   * @defaultValue `45`\n   */\n  gyroscopeMaxAngleY?: number;\n\n  /**\n   * A callback function for the `MouseEnter` synthetic event on the wrapping\n   * div element.\n   *\n   * @see {@link https://reactjs.org/docs/events.html#mouse-events}\n   */\n  onMouseEnter?: MouseEventHandler<HTMLDivElement>;\n\n  /**\n   * A callback function for the `MouseMove` synthetic event on the wrapping\n   * div element.\n   *\n   * @see {@link https://reactjs.org/docs/events.html#mouse-events}\n   */\n  onMouseMove?: MouseEventHandler<HTMLDivElement>;\n\n  /**\n   * A callback function for the `MouseLeave` synthetic event on the wrapping\n   * div element.\n   *\n   * @see {@link https://reactjs.org/docs/events.html#mouse-events}\n   */\n  onMouseLeave?: MouseEventHandler<HTMLDivElement>;\n\n  /**\n   * A callback function for the custom `tiltChange` event on the Tilt\n   * component.\n   *\n   * @param event - A custom event object with a `detail` property containing\n   * tilt angles.\n   */\n  onTiltChange?: TiltChangeEventHandler;\n\n  /**\n   * The children to render inside the `Tilt` component.\n   */\n  children: ReactNode;\n}\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst Tilty = ({\n  style = {},\n  className = '',\n  reverse = false,\n  max = 35,\n  perspective = 1000,\n  easing = 'cubic-bezier(0.03,0.98,0.52,0.99)',\n  speed = 300,\n  scale = 1,\n  axis,\n  reset = true,\n  glare = false,\n  maxGlare = 1,\n  glareStyle = {},\n  gyroscope = true,\n  gyroscopeMinAngleX = -45,\n  gyroscopeMaxAngleX = 45,\n  gyroscopeMinAngleY = -45,\n  gyroscopeMaxAngleY = 45,\n  onMouseEnter = () => {},\n  onMouseMove = () => {},\n  onMouseLeave = () => {},\n  onTiltChange = () => {},\n  children,\n}: TiltyProps) => {\n  // VARIABLES\n  const [styleState, setStyle] = useState<CSSProperties>({\n    position: 'relative',\n    willChange: 'transform',\n  });\n  const [glareStyleState, setGlareStyle] = useState<CSSProperties>({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    pointerEvents: 'none',\n    backgroundImage: `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n    transform: 'rotate(180deg) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    opacity: '0',\n  });\n\n  const width = useRef<number>(0);\n  const height = useRef<number>(0);\n  const left = useRef<number>(0);\n  const top = useRef<number>(0);\n  const transitionTimeout = useRef<NodeJS.Timeout | null>(null);\n  const updateCall = useRef<number | null>(null);\n\n  const reverseNum = reverse ? 1 : -1;\n\n  const element = useRef<HTMLDivElement>(null);\n\n  // UNMOUNT\n  useEffect(\n    () => () => {\n      if (transitionTimeout.current) {\n        clearTimeout(transitionTimeout.current);\n      }\n      if (typeof window !== 'undefined' && updateCall.current) {\n        window.cancelAnimationFrame(updateCall.current);\n      }\n    },\n    []\n  );\n\n  // GLARE\n  useEffect(() => {\n    if (!glare || typeof window === 'undefined') {\n      return () => {};\n    }\n\n    const updateGlareSize = () => {\n      const { current: currentEl } = element;\n      if (currentEl !== null) {\n        setGlareStyle((prevGlareStyle) => ({\n          ...prevGlareStyle,\n          width: currentEl.offsetWidth * 2,\n          height: currentEl.offsetWidth * 2,\n        }));\n      }\n    };\n\n    window.addEventListener('resize', updateGlareSize);\n\n    return () => {\n      window.removeEventListener('resize', updateGlareSize);\n    };\n  }, [glare]);\n\n  useIsomorphicLayoutEffect(() => {\n    const { current: currentEl } = element;\n    if (currentEl !== null) {\n      setGlareStyle((prevGlareStyle) => ({\n        ...prevGlareStyle,\n        width: currentEl.offsetWidth * 2,\n        height: currentEl.offsetWidth * 2,\n      }));\n    }\n  }, []);\n\n  // TILT FUNCTIONS\n  const updateElementPosition = () => {\n    const { current: currentEl } = element;\n    if (currentEl !== null) {\n      const rect = currentEl.getBoundingClientRect();\n      width.current = currentEl.offsetWidth;\n      height.current = currentEl.offsetHeight;\n      left.current = rect.left;\n      top.current = rect.top;\n    }\n  };\n\n  const getValues = useCallback(\n    (coordinates: Coordinates) => {\n      let x = (coordinates.clientX - left.current) / width.current;\n      let y = (coordinates.clientY - top.current) / height.current;\n\n      x = Math.min(Math.max(x, 0), 1);\n      y = Math.min(Math.max(y, 0), 1);\n\n      const tiltX = (reverseNum * (max / 2 - x * max)).toFixed(2);\n      const tiltY = (reverseNum * (y * max - max / 2)).toFixed(2);\n\n      const angle =\n        Math.atan2(\n          coordinates.clientX - (left.current + width.current / 2),\n          -(coordinates.clientY - (top.current + height.current / 2))\n        ) *\n        (180 / Math.PI);\n\n      const percentageX = x * 100;\n      const percentageY = y * 100;\n\n      return {\n        tiltX,\n        tiltY,\n        percentageX,\n        percentageY,\n        angle,\n      };\n    },\n    [max, reverseNum]\n  );\n\n  const update = useCallback(\n    (coordinates: Coordinates) => {\n      const values = getValues(coordinates);\n\n      setStyle((prevStyle) => ({\n        ...prevStyle,\n        transform: `perspective(${perspective}px) rotateX(${\n          axis?.toLowerCase() === 'x' ? 0 : values.tiltY\n        }deg) rotateY(${\n          axis?.toLowerCase() === 'y' ? 0 : values.tiltX\n        }deg) scale3d(${scale}, ${scale}, ${scale})`,\n      }));\n\n      if (glare) {\n        setGlareStyle((prevGlareStyle) => ({\n          ...prevGlareStyle,\n          transform: `rotate(${values.angle}deg) translate(-50%, -50%)`,\n          opacity: (values.percentageY * maxGlare) / 100,\n        }));\n      }\n\n      // fire tiltChange event and callback\n      if (element.current) {\n        element.current.dispatchEvent(\n          new CustomEvent('tiltChange', {\n            detail: values,\n          })\n        );\n      }\n\n      onTiltChange({ detail: values });\n\n      updateCall.current = null;\n    },\n    [axis, getValues, glare, maxGlare, perspective, scale, onTiltChange]\n  );\n\n  const setTransition = () => {\n    if (transitionTimeout.current) {\n      clearTimeout(transitionTimeout.current);\n      transitionTimeout.current = null;\n    }\n\n    setStyle((prevStyle) => ({\n      ...prevStyle,\n      transition: `${speed}ms ${easing}`,\n    }));\n\n    transitionTimeout.current = setTimeout(() => {\n      setStyle((prevStyle) => ({\n        ...prevStyle,\n        transition: '',\n      }));\n    }, speed);\n  };\n\n  const handleReset = () => {\n    if (typeof window !== 'undefined') {\n      window.requestAnimationFrame(() => {\n        setStyle((prevStyle) => ({\n          ...prevStyle,\n          transform: `perspective(${perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`,\n        }));\n\n        if (glare) {\n          setGlareStyle((prevGlareStyle) => ({\n            ...prevGlareStyle,\n            transform: 'rotate(180deg) translate(-50%, -50%)',\n            opacity: 0,\n          }));\n        }\n      });\n    }\n  };\n\n  // MOUSE EVENTS\n  const handleMouseEnter: MouseEventHandler<HTMLDivElement> = (e) => {\n    updateElementPosition();\n    setTransition();\n    return onMouseEnter(e);\n  };\n\n  const handleMouseMove: MouseEventHandler<HTMLDivElement> = (e) => {\n    e.persist();\n    if (updateCall.current !== null && typeof window !== 'undefined') {\n      window.cancelAnimationFrame(updateCall.current);\n    }\n    const coordinates = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n    };\n    updateCall.current = requestAnimationFrame(() => update(coordinates));\n    return onMouseMove(e);\n  };\n\n  const handleMouseLeave: MouseEventHandler<HTMLDivElement> = (e) => {\n    setTransition();\n\n    if (reset) {\n      handleReset();\n    }\n\n    return onMouseLeave(e);\n  };\n\n  // DEVICE GYROSCOPE TILTING\n  useEffect(() => {\n    if (!gyroscope) {\n      return () => {};\n    }\n\n    const onDeviceOrientation = (e: DeviceOrientationEvent) => {\n      if (typeof window === 'undefined' || !e.gamma || !e.beta) {\n        return;\n      }\n\n      updateElementPosition();\n\n      const totalAngleX = gyroscopeMaxAngleX - gyroscopeMinAngleX;\n      const totalAngleY = gyroscopeMaxAngleY - gyroscopeMinAngleY;\n\n      const degreesPerPixelX = totalAngleX / width.current;\n      const degreesPerPixelY = totalAngleY / height.current;\n\n      const angleX = e.gamma - gyroscopeMinAngleX;\n      const angleY = e.beta - gyroscopeMinAngleY;\n\n      const posX = angleX / degreesPerPixelX;\n      const posY = angleY / degreesPerPixelY;\n\n      if (updateCall.current !== null) {\n        window.cancelAnimationFrame(updateCall.current);\n      }\n\n      const coordinates = {\n        clientX: posX + left.current,\n        clientY: posY + top.current,\n      };\n\n      updateCall.current = requestAnimationFrame(() => update(coordinates));\n    };\n\n    window.addEventListener('deviceorientation', onDeviceOrientation);\n\n    return () => {\n      window.removeEventListener('deviceorientation', onDeviceOrientation);\n    };\n  }, [\n    gyroscope,\n    gyroscopeMaxAngleX,\n    gyroscopeMaxAngleY,\n    gyroscopeMinAngleX,\n    gyroscopeMinAngleY,\n    update,\n  ]);\n\n  return (\n    <div\n      ref={element}\n      style={{\n        ...style,\n        ...styleState,\n      }}\n      className={className}\n      onMouseEnter={handleMouseEnter}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n    >\n      {glare && (\n        <div\n          className=\"tilty-glare-wrapper\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n          }}\n        >\n          <div\n            className=\"tilty-glare\"\n            style={{\n              ...glareStyle,\n              ...glareStyleState,\n            }}\n          />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default Tilty;\n"],"names":["useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","style","className","reverse","max","perspective","easing","speed","scale","axis","reset","glare","maxGlare","glareStyle","gyroscope","gyroscopeMinAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleY","gyroscopeMaxAngleY","onMouseEnter","onMouseMove","onMouseLeave","onTiltChange","children","styleState","setStyle","useState","position","willChange","glareStyleState","setGlareStyle","top","left","pointerEvents","backgroundImage","transform","transformOrigin","opacity","width","useRef","height","transitionTimeout","updateCall","reverseNum","element","current","clearTimeout","cancelAnimationFrame","updateGlareSize","currentEl","prevGlareStyle","offsetWidth","addEventListener","removeEventListener","updateElementPosition","rect","getBoundingClientRect","offsetHeight","getValues","useCallback","coordinates","x","clientX","y","clientY","Math","min","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","update","values","prevStyle","toLowerCase","dispatchEvent","CustomEvent","detail","setTransition","transition","setTimeout","onDeviceOrientation","e","gamma","beta","posX","posY","requestAnimationFrame","React","ref","persist","overflow"],"mappings":"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"}